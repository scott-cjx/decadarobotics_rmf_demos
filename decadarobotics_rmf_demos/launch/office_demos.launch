<?xml version='1.0' ?>

<launch>
  <arg name="use_ignition" default="0"/>
  <arg name="gazebo_version" default="11"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="failover_mode" default="false"/>

  <!-- Common launch -->
  <include file="$(find-pkg-share rmf_demos)/common.launch.xml">
    <arg name="use_sim_time" value="$(var use_sim_time)"/>
    <arg name="viz_config_file" value ="$(find-pkg-share rmf_demos)/include/office/office.rviz"/>
    <arg name="config_file" value="$(find-pkg-share rmf_demos_maps)/office/office.building.yaml"/>
    <arg name="dashboard_config_file" value="$(find-pkg-share rmf_demos_dashboard_resources)/office/dashboard_config.json"/>
  </include>

  <!-- Simulation launch -->
  <include file="$(find-pkg-share rmf_demos)/simulation.launch.xml">
    <arg name="map_name" value="office" />
    <arg name="map_package" value="rmf_demos_maps" />
    <arg name="use_ignition" value="$(var use_ignition)" />
    <arg name="gazebo_version" value="$(var gazebo_version)" />
  </include>

  <!-- DeliveryRobot fleet adapter and robot state aggregator needed for DeliveryRobot slotcar_plugin -->
  <group>
    <let name="fleet_name" value="caato_fleet"/>
    <include file="$(find-pkg-share rmf_demos)/include/adapters/deliveryRobot_adapter.launch.xml">
      <arg name="fleet_name" value="$(var fleet_name)"/>
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="nav_graph_file" value="$(find-pkg-share decadarobotics_rmf_demos_maps)/maps/mbc/nav_graphs/0.yaml" />
    </include>
    <include file="$(find-pkg-share rmf_fleet_adapter)/robot_state_aggregator.launch.xml">
      <arg name="robot_prefix" value="caato"/>
      <arg name="fleet_name" value="$(var fleet_name)"/>
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="failover_mode" value="$(var failover_mode)"/>
    </include>

    <node pkg="free_fleet_server_ros2"
      exec="free_fleet_server_ros2"
      name="free_fleet_server_node"
      output="both">

      <param name="fleet_name" value="caato_fleet"/>

      <!-- These are the ROS2 topic names that will be used to communicate with RMF -->
      <param name="fleet_state_topic" value="fleet_states"/>
      <param name="mode_request_topic" value="robot_mode_requests"/>
      <param name="path_request_topic" value="robot_path_requests"/>
      <param name="destination_request_topic" value="robot_destination_requests"/>

      <!-- These are the DDS specific configurations used to communicate with the clients -->
      <param name="dds_domain" value="42"/>
      <param name="dds_robot_state_topic" value="robot_state"/>
      <param name="dds_mode_request_topic" value="mode_request"/>
      <param name="dds_path_request_topic" value="path_request"/>
      <param name="dds_destination_request_topic" value="destination_request"/>

      <!-- This determines the frequency it checks for incoming state and request messages,
      as well as how often it publishes its fleet state to RMF -->
      <param name="update_state_frequency" value="20.0"/>
      <param name="publish_state_frequency" value="2.0"/>

      <!-- These transformations are required when the frame of the robot fleet is
      different from that of RMF globally. In order to transform a pose from the RMF
      frame to the free fleet robot frame, it is first scaled, rotated, then
      translated using these parameters -->
      <param name="scale" value="0.0"/>
      <param name="rotation" value="0.0"/>
      <param name="translation_x" value="0.0"/>
      <param name="translation_y" value="0.0"/>
    </node>
  </group>

</launch>